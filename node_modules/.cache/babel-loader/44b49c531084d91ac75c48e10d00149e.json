{"ast":null,"code":"import _objectSpread from \"/Users/kiwonkim/Downloads/react-hooks-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux';\nimport uuid from 'uuid/v4';\nconst initialState = {\n  todos: [{\n    id: uuid(),\n    name: 'Read a bit',\n    complete: true\n  }, {\n    id: uuid(),\n    name: 'Do laundry',\n    complete: false\n  }]\n};\nexport const store = createStore(reducer, initialState, window.devToolsExtension && window.devToolsExtension()); // Reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        todos: [...state.todos, action.payload]\n      });\n\n    case 'TOGGLE_TODO':\n      return _objectSpread({}, state, {\n        todos: state.todos.map(todo => todo.id === action.payload ? _objectSpread({}, todo, {\n          complete: !todo.complete\n        }) : todo)\n      });\n\n    case 'DELETE_TODO':\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n} // Actions\n\n\nexport const addTodoAction = todo => ({\n  type: 'ADD_TODO',\n  payload: todo\n});\nexport const toggleTodoComplete = todoId => ({\n  type: 'TOGGLE_TODO',\n  payload: todoId\n});\nexport const deleteTodoAction = todoId => ({\n  type: 'DELETE_TODO',\n  payload: todoId\n});","map":{"version":3,"sources":["/Users/kiwonkim/Downloads/react-hooks-redux/src/redux.js"],"names":["createStore","uuid","initialState","todos","id","name","complete","store","reducer","window","devToolsExtension","state","action","type","payload","map","todo","filter","addTodoAction","toggleTodoComplete","todoId","deleteTodoAction"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAEH,IAAI,EADV;AAEEI,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADK,EAML;AACEF,IAAAA,EAAE,EAAEH,IAAI,EADV;AAEEI,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANK;AADY,CAArB;AAeA,OAAO,MAAMC,KAAK,GAAGP,WAAW,CAC9BQ,OAD8B,EAE9BN,YAF8B,EAG9BO,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACC,iBAAP,EAHE,CAAzB,C,CAKP;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEER,QAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBS,MAAM,CAACE,OAAxB;AAFT;;AAIF,SAAK,aAAL;AACE,+BACKH,KADL;AAEER,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYY,GAAZ,CAAiBC,IAAD,IACrBA,IAAI,CAACZ,EAAL,KAAYQ,MAAM,CAACE,OAAnB,qBACSE,IADT;AACeV,UAAAA,QAAQ,EAAE,CAACU,IAAI,CAACV;AAD/B,aAEIU,IAHC;AAFT;;AAQF,SAAK,aAAL;AACE,+BACKL,KADL;AAEER,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYc,MAAZ,CAAoBD,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYQ,MAAM,CAACE,OAAhD;AAFT;;AAIF;AACE,aAAOH,KAAP;AArBJ;AAuBD,C,CACD;;;AACA,OAAO,MAAMO,aAAa,GAAIF,IAAD,KAAW;AACtCH,EAAAA,IAAI,EAAE,UADgC;AAEtCC,EAAAA,OAAO,EAAEE;AAF6B,CAAX,CAAtB;AAKP,OAAO,MAAMG,kBAAkB,GAAIC,MAAD,KAAa;AAC7CP,EAAAA,IAAI,EAAE,aADuC;AAE7CC,EAAAA,OAAO,EAAEM;AAFoC,CAAb,CAA3B;AAKP,OAAO,MAAMC,gBAAgB,GAAID,MAAD,KAAa;AAC3CP,EAAAA,IAAI,EAAE,aADqC;AAE3CC,EAAAA,OAAO,EAAEM;AAFkC,CAAb,CAAzB","sourcesContent":["import { createStore } from 'redux';\nimport uuid from 'uuid/v4';\n\nconst initialState = {\n  todos: [\n    {\n      id: uuid(),\n      name: 'Read a bit',\n      complete: true\n    },\n    {\n      id: uuid(),\n      name: 'Do laundry',\n      complete: false\n    }\n  ]\n};\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  window.devToolsExtension && window.devToolsExtension()\n);\n// Reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case 'TOGGLE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload\n            ? { ...todo, complete: !todo.complete }\n            : todo\n        )\n      };\n    case 'DELETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n// Actions\nexport const addTodoAction = (todo) => ({\n  type: 'ADD_TODO',\n  payload: todo\n});\n\nexport const toggleTodoComplete = (todoId) => ({\n  type: 'TOGGLE_TODO',\n  payload: todoId\n});\n\nexport const deleteTodoAction = (todoId) => ({\n  type: 'DELETE_TODO',\n  payload: todoId\n});\n"]},"metadata":{},"sourceType":"module"}