{"ast":null,"code":"var _jsxFileName = \"/Users/kiwonkim/Downloads/react-hooks-redux/src/components/TodoList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleTodoComplete, deleteTodoAction } from '../redux';\n\nconst TodoList = props => {\n  const todos = props.todos;\n\n  const toggleComplete = todoId => {\n    props.toggleTodoComplete(todoId);\n  };\n\n  const deleteTodo = todoId => {\n    props.deleteTodoAction(todoId);\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.complete,\n    onChange: toggleComplete.bind(null, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: todo.complete ? 'complete' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, todo.name), React.createElement(\"span\", {\n    className: \"delete-button\",\n    onClick: deleteTodo.bind(null, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"X\"))));\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nexport default connect(mapStateToProps, {\n  toggleTodoComplete,\n  deleteTodoAction\n})(TodoList);","map":{"version":3,"sources":["/Users/kiwonkim/Downloads/react-hooks-redux/src/components/TodoList.js"],"names":["React","connect","toggleTodoComplete","deleteTodoAction","TodoList","props","todos","toggleComplete","todoId","deleteTodo","map","todo","id","complete","bind","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,UAArD;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QAClBC,KADkB,GACRD,KADQ,CAClBC,KADkB;;AAG1B,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjCH,IAAAA,KAAK,CAACH,kBAAN,CAAyBM,MAAzB;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAID,MAAD,IAAY;AAC7BH,IAAAA,KAAK,CAACF,gBAAN,CAAuBK,MAAvB;AACD,GAFD;;AAIA,SACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACI,GAAN,CAAWC,IAAD,IACT;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAED,IAAI,CAACE,QAFhB;AAGE,IAAA,QAAQ,EAAEN,cAAc,CAACO,IAAf,CAAoB,IAApB,EAA0BH,IAAI,CAACC,EAA/B,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAM,IAAA,SAAS,EAAED,IAAI,CAACE,QAAL,GAAgB,UAAhB,GAA6B,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDF,IAAI,CAACI,IAA1D,CANF,EAOE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAEN,UAAU,CAACK,IAAX,CAAgB,IAAhB,EAAsBH,IAAI,CAACC,EAA3B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADD,CADH,CADF;AAoBD,CA9BD;;AAgCA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,KAAK,EAAEW,KAAK,CAACX;AADqB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { toggleTodoComplete, deleteTodoAction } from '../redux';\n\nconst TodoList = (props) => {\n  const { todos } = props;\n\n  const toggleComplete = (todoId) => {\n    props.toggleTodoComplete(todoId);\n  };\n  const deleteTodo = (todoId) => {\n    props.deleteTodoAction(todoId);\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={toggleComplete.bind(null, todo.id)}\n          />\n          <span className={todo.complete ? 'complete' : null}>{todo.name}</span>\n          <span\n            className=\"delete-button\"\n            onClick={deleteTodo.bind(null, todo.id)}\n          >\n            X\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleTodoComplete, deleteTodoAction }\n)(TodoList);\n"]},"metadata":{},"sourceType":"module"}